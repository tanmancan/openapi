/*
Computer Vision APIs (2024-02-01)

The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the people in an image.  It also has other features like categorizing the content of images, and describing an image with complete English sentences.

API version: 2024-02-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package azurecv

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VectorizeTextRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VectorizeTextRequest{}

// VectorizeTextRequest Model for VectorizeText request.
type VectorizeTextRequest struct {
	// Text for vectorization.
	Text string `json:"text"`
}

type _VectorizeTextRequest VectorizeTextRequest

// NewVectorizeTextRequest instantiates a new VectorizeTextRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVectorizeTextRequest(text string) *VectorizeTextRequest {
	this := VectorizeTextRequest{}
	this.Text = text
	return &this
}

// NewVectorizeTextRequestWithDefaults instantiates a new VectorizeTextRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVectorizeTextRequestWithDefaults() *VectorizeTextRequest {
	this := VectorizeTextRequest{}
	return &this
}

// GetText returns the Text field value
func (o *VectorizeTextRequest) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *VectorizeTextRequest) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *VectorizeTextRequest) SetText(v string) {
	o.Text = v
}

func (o VectorizeTextRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VectorizeTextRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["text"] = o.Text
	return toSerialize, nil
}

func (o *VectorizeTextRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"text",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVectorizeTextRequest := _VectorizeTextRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVectorizeTextRequest)

	if err != nil {
		return err
	}

	*o = VectorizeTextRequest(varVectorizeTextRequest)

	return err
}

type NullableVectorizeTextRequest struct {
	value *VectorizeTextRequest
	isSet bool
}

func (v NullableVectorizeTextRequest) Get() *VectorizeTextRequest {
	return v.value
}

func (v *NullableVectorizeTextRequest) Set(val *VectorizeTextRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVectorizeTextRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVectorizeTextRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVectorizeTextRequest(val *VectorizeTextRequest) *NullableVectorizeTextRequest {
	return &NullableVectorizeTextRequest{value: val, isSet: true}
}

func (v NullableVectorizeTextRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVectorizeTextRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


